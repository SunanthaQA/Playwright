{"name": "test_add_invoice", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"//span[contains(text(), 'Indigo Client')]\")", "trace": "setup_and_teardown = <Page url='https://www.tig-test.com/my-frs/frs-invoices'>\n\n    def test_add_invoice(setup_and_teardown) -> None:\n        page = setup_and_teardown\n        invoice_page = UploadInvoicePage(page)\n        try:\n            invoice_page.login(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 1),\n                               ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 2))\n>           invoice_page.upload_invoice(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1),\n                                        ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 2),\n                                        ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 3))\n\ntests/test_Upload_invoice.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/UploadInvoicePage.py:70: in upload_invoice\n    self.get_element('client_option').click()\n../../miniconda3/lib/python3.9/site-packages/playwright/sync_api/_generated.py:14929: in click\n    self._sync(\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x7f554299f6d0>, cb = <function Channel.send.<locals>.<lambda> at 0x7f5542898550>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//span[contains(text(), 'Indigo Client')]\")\n\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:514: TimeoutError"}, "attachments": [{"name": "stdout", "source": "434a0c5c-1d00-49ec-b280-706438976e91-attachment.txt", "type": "text/plain"}], "start": 1720431211923, "stop": 1720431246396, "uuid": "4df694d1-02ea-49a0-8eed-20bfe6922691", "historyId": "1c19e96ac1fa7f5df8070d5766cac19e", "testCaseId": "1c19e96ac1fa7f5df8070d5766cac19e", "fullName": "tests.test_Upload_invoice#test_add_invoice", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Upload_invoice"}, {"name": "host", "value": "laptop-obs-156"}, {"name": "thread", "value": "113532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Upload_invoice"}]}