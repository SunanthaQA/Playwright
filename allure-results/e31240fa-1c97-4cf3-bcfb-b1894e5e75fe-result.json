{"name": "test_verify_created_invoice_status", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: locator(\"//div[contains(@class, 'text-truncate-w100') and contains(text(), 'invoicenumb1')]\") resolved to 2 elements:\n    1) <div class=\"text-truncate-w100 ng-tns-c713-4\">invoicenumb1</div> aka get_by_text(\"invoicenumb1\").first\n    2) <div class=\"text-truncate-w100 ng-tns-c713-4\">invoicenumb1</div> aka get_by_text(\"invoicenumb1\").nth(1)\n\nCall log:\nLocatorAssertions.to_be_visible with timeout 5000ms\n  - waiting for locator(\"//div[contains(@class, 'text-truncate-w100') and contains(text(), 'invoicenumb1')]\")", "trace": "setup_and_teardown = <Page url='https://www.tig-test.com/my-frs/frs-invoices'>\n\n    def test_verify_created_invoice_status(setup_and_teardown) -> None:\n        page = setup_and_teardown\n        invoice_page = UploadInvoicePage(page)\n        try:\n            invoice_page.login(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 1),\n                               ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 2))\n            invoice_page.search_invoice(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1))\n            time.sleep(3)\n>           invoice_page.verify_invoice_in_list(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1))\n\ntests/test_Upload_invoice.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/UploadInvoicePage.py:104: in verify_invoice_in_list\n    expect(element).to_be_visible()\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_locator.py:705: in _expect\n    result = await self._frame._channel.send_return_as_dict(\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:64: in send_return_as_dict\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x7ff0b654ab80>, cb = <function Channel.send_return_as_dict.<locals>.<lambda> at 0x7ff0a464fdc0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: LocatorAssertions.to_be_visible: Error: strict mode violation: locator(\"//div[contains(@class, 'text-truncate-w100') and contains(text(), 'invoicenumb1')]\") resolved to 2 elements:\nE               1) <div class=\"text-truncate-w100 ng-tns-c713-4\">invoicenumb1</div> aka get_by_text(\"invoicenumb1\").first\nE               2) <div class=\"text-truncate-w100 ng-tns-c713-4\">invoicenumb1</div> aka get_by_text(\"invoicenumb1\").nth(1)\nE           \nE           Call log:\nE           LocatorAssertions.to_be_visible with timeout 5000ms\nE             - waiting for locator(\"//div[contains(@class, 'text-truncate-w100') and contains(text(), 'invoicenumb1')]\")\n\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:514: Error"}, "attachments": [{"name": "stdout", "source": "9e50ca46-f83d-48e4-9b94-11556208cc7f-attachment.txt", "type": "text/plain"}], "start": 1720448923977, "stop": 1720448931153, "uuid": "d3deb622-74a2-449a-8a3a-1c545e7d2620", "historyId": "0a6e48d5408d613d4f1eeb54af380e68", "testCaseId": "0a6e48d5408d613d4f1eeb54af380e68", "fullName": "tests.test_Upload_invoice#test_verify_created_invoice_status", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Upload_invoice"}, {"name": "host", "value": "laptop-obs-156"}, {"name": "thread", "value": "149558-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Upload_invoice"}]}