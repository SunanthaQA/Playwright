{"name": "test_verify_invoice_delete_status", "status": "failed", "statusDetails": {"message": "Failed: Failed to verify invoice delete status: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"//mat-icon[@class='mat-icon notranslate rebrand-icon gray material-icons-outlined material-icons mat-ligature-font mat-icon-no-color' and text()=' delete']\")", "trace": "setup_and_teardown = <Page url='https://www.tig-test.com/my-frs/frs-invoices'>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.story('Delete created Invoice')\n    def test_verify_invoice_delete_status(setup_and_teardown) -> None:\n        page = setup_and_teardown\n        invoice_page = UploadInvoicePage(page)\n        credentials = {\n            'username': ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 1),\n            'password': ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 2)\n        }\n        invoice_number = ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1)\n    \n        with allure.step('Login and delete invoice'):\n            allure.attach(f\"Username: {credentials['username']}\", name=\"Input Username\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(f\"Password: {credentials['password']}\", name=\"Input Password\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(f\"Invoice Number: {invoice_number}\", name=\"Invoice Number\",\n                          attachment_type=allure.attachment_type.TEXT)\n            try:\n                invoice_page.login(credentials['username'], credentials['password'])\n                invoice_page.search_invoice(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1))\n                time.sleep(3)\n>               invoice_page.delete_invoice()\n\ntests/test_Upload_invoice.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/UploadInvoicePage.py:113: in delete_invoice\n    self.get_element('delete_icon').click()\n../../miniconda3/lib/python3.9/site-packages/playwright/sync_api/_generated.py:14929: in click\n    self._sync(\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x7f2b4e86d940>, cb = <function Channel.send.<locals>.<lambda> at 0x7f2b4eaabc10>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//mat-icon[@class='mat-icon notranslate rebrand-icon gray material-icons-outlined material-icons mat-ligature-font mat-icon-no-color' and text()=' delete']\")\n\n../../miniconda3/lib/python3.9/site-packages/playwright/_impl/_connection.py:514: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_and_teardown = <Page url='https://www.tig-test.com/my-frs/frs-invoices'>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.story('Delete created Invoice')\n    def test_verify_invoice_delete_status(setup_and_teardown) -> None:\n        page = setup_and_teardown\n        invoice_page = UploadInvoicePage(page)\n        credentials = {\n            'username': ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 1),\n            'password': ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Login\", 2, 2)\n        }\n        invoice_number = ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1)\n    \n        with allure.step('Login and delete invoice'):\n            allure.attach(f\"Username: {credentials['username']}\", name=\"Input Username\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(f\"Password: {credentials['password']}\", name=\"Input Password\",\n                          attachment_type=allure.attachment_type.TEXT)\n            allure.attach(f\"Invoice Number: {invoice_number}\", name=\"Invoice Number\",\n                          attachment_type=allure.attachment_type.TEXT)\n            try:\n                invoice_page.login(credentials['username'], credentials['password'])\n                invoice_page.search_invoice(ExcelUtils.get_cell_data(\"ExcelFiles/Testdata.xlsx\", \"Invoice\", 2, 1))\n                time.sleep(3)\n                invoice_page.delete_invoice()\n                invoice_page.verify_deletion_message(ValidationTexts.SUCCESSFUL_INVOICE_DELETE)\n                attach_screenshot(page, \"Invoice Deletion Success\")\n            except (TimeoutError, Error, AssertionError) as e:\n                attach_screenshot(page, \"Invoice Deletion Failure\")\n                print(f\"Test 'verify_invoice_delete_status' failed: {e}\")\n>               pytest.fail(f\"Failed to verify invoice delete status: {str(e)}\")\nE               Failed: Failed to verify invoice delete status: Locator.click: Timeout 30000ms exceeded.\nE               Call log:\nE               waiting for locator(\"//mat-icon[@class='mat-icon notranslate rebrand-icon gray material-icons-outlined material-icons mat-ligature-font mat-icon-no-color' and text()=' delete']\")\n\ntests/test_Upload_invoice.py:110: Failed"}, "steps": [{"name": "Login and delete invoice", "status": "failed", "statusDetails": {"message": "Failed: Failed to verify invoice delete status: Locator.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"//mat-icon[@class='mat-icon notranslate rebrand-icon gray material-icons-outlined material-icons mat-ligature-font mat-icon-no-color' and text()=' delete']\")\n\n", "trace": "  File \"/home/laptop-obs-156/PycharmProjects/Playwright_Walkthrought/tests/test_Upload_invoice.py\", line 110, in test_verify_invoice_delete_status\n    pytest.fail(f\"Failed to verify invoice delete status: {str(e)}\")\n  File \"/home/laptop-obs-156/miniconda3/lib/python3.9/site-packages/_pytest/outcomes.py\", line 198, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "Input Username", "source": "338c9763-30d8-4578-96ad-06217b1ce3e3-attachment.txt", "type": "text/plain"}, {"name": "Input Password", "source": "f07c81ad-dc1d-44bf-9042-07b122c1c6aa-attachment.txt", "type": "text/plain"}, {"name": "Invoice Number", "source": "7ffed2c7-3bb8-485f-af3a-efd64a813502-attachment.txt", "type": "text/plain"}, {"name": "Invoice Deletion Failure", "source": "e51b77d8-6c74-4983-a44b-9c10ee2ec8bf-attachment.png", "type": "image/png"}], "start": 1720514845932, "stop": 1720514886685}], "attachments": [{"name": "stdout", "source": "3c72fc9e-cb2d-4194-aa64-8136ebd37d68-attachment.txt", "type": "text/plain"}], "start": 1720514845865, "stop": 1720514886686, "uuid": "c3f917e1-8a24-4fd1-aa47-8d6a028b0ce2", "historyId": "9060090de2a57dc8e145cf72124402e7", "testCaseId": "9060090de2a57dc8e145cf72124402e7", "fullName": "tests.test_Upload_invoice#test_verify_invoice_delete_status", "labels": [{"name": "story", "value": "Delete created Invoice"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Upload_invoice"}, {"name": "host", "value": "laptop-obs-156"}, {"name": "thread", "value": "57813-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Upload_invoice"}]}